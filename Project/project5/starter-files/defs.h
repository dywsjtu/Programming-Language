#pragma once

/**
 * defs.h
 *
 * This file provides macro definitions that are used in other library
 * code files, as well as in code generated by the uC compiler.
 *
 * Names are mangled to avoid clashing with C++ names.
 */

// Basic concatenation macro
#define _UC_CONCAT_(a, b) a ## b
#define _UC_CONCAT(a, b) _UC_CONCAT_(a, b)

// Prepend prefix to names generated through macros
#define _UC_PREFIX(item) _UC_CONCAT(_ucp_, item)

// A primitive type of the given name
#define _UC_PRIMITIVE(name)                     \
  _UC_PREFIX(_UC_CONCAT(p_, name))

// A raw user-defined type of the given name, used in type definitions
#define _UC_TYPEDEF(name)                       \
  _UC_PREFIX(_UC_CONCAT(t_, name))

// A user-defined type wrapped in a reference
#define _UC_TYPE(name)                                  \
  _uc_reference<_UC_PREFIX(_UC_CONCAT(t_, name))>

// An array type with the given element type
#define _UC_ARRAY(elem_type)                    \
  _UC_PREFIX(array<elem_type>)

// A function of the given name
#define _UC_FUNCTION(name)                      \
  _UC_PREFIX(_UC_CONCAT(f_, name))

// A variable of the given name
#define _UC_VAR(name)                           \
  _UC_PREFIX(_UC_CONCAT(v_, name))
